<Page x:Class="se2_loon_hh.Forms.AddClientPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:local="clr-namespace:se2_loon_hh.Forms"
      xmlns:formapi="clr-namespace:se2_loon_hh.Forms.FormsAPI"
      mc:Ignorable="d"
      d:DesignHeight="7000" d:DesignWidth="500"
      Title="AddClientPage">
    <Page.Resources>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Width" Value="250"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Width" Value="250"/>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="Width" Value="475"/>
        </Style>
        <Style TargetType="DatePicker">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Width" Value="250"/>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!-- This is a custom converter (located in FormsAPI) that will convert between yes/no radio buttons and a long -->
        <formapi:RadioBoolToLongConverter x:Key="RadioBoolToLongConverter"/>
    </Page.Resources>
    <DockPanel>
        <!-- Popups stay hidden until they are manually shown with isOpen. See submit button code for example  -->
        <Popup x:Name="ValidatorPopup" StaysOpen="False" PopupAnimation="Fade" AllowsTransparency="True">
            <StackPanel>
                <Border CornerRadius="3" BorderThickness="3" BorderBrush="#FFFFFF8A">
                    <Label x:Name="ValidatorPopupLabel" Background="#FFFFFF8A"/>
                </Border>
                <Path Grid.Row="1" Data="M3,0 L8,5 L13,0Z" Stroke="#FFFFFF8A" Fill="#FFFFFF8A" StrokeThickness="1"/>
            </StackPanel>
        </Popup>
        <StackPanel DockPanel.Dock="Top">
            <Grid>
                <Button HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Name="BackButton" Click="BackButton_Click">Back</Button>
                <Button HorizontalAlignment="Right" VerticalAlignment="Top" Width="100" Name="SubmitButton" Click="SubmitButton_Click">Submit</Button>
            </Grid>
            <Separator/>
        </StackPanel>
        <FlowDocumentPageViewer HorizontalContentAlignment="Center">
            <FlowDocument PagePadding="5" PageWidth="500">
                <!-- Page width should be a little bit larger than your widest element to prevent wrapping -->
                <Paragraph>
                    <GroupBox Header="Name">
                        <StackPanel>
                            <Grid>
                                <Label>First Name:</Label>
                                <TextBox x:Name="FirstNameTextBox" Text="{Binding client.FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                            <Grid>
                                <Label>Middle Name:</Label>
                                <TextBox x:Name="MiddleNameTextBox" Text="{Binding client.MiddleName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                            <Grid>
                                <Label>Last Name:</Label>
                                <TextBox x:Name="LastNameTextBox" Text="{Binding client.LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </Paragraph>
                <Paragraph>
                    <GroupBox Header="Date of Birth">
                        <DatePicker x:Name="BirthdayDatePicker" Text="{Binding client.BirthDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </GroupBox>
                </Paragraph>
                <Paragraph>
                    <GroupBox Header="Ethnicity">
                        <StackPanel>
                            <Grid>
                                <ComboBox x:Name="EthnicityComboBox" SelectedValuePath="Content" SelectedValue="{Binding client.Ethnicity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem>Caucasian</ComboBoxItem>
                                    <ComboBoxItem>African American</ComboBoxItem>
                                    <ComboBoxItem>Hispanic</ComboBoxItem>
                                    <ComboBoxItem>Asian</ComboBoxItem>
                                    <ComboBoxItem>Native American</ComboBoxItem>
                                    <ComboBoxItem Tag="OtherEthnicity">Other</ComboBoxItem>
                                    <ComboBoxItem>Unknown</ComboBoxItem>
                                </ComboBox>
                            </Grid>
                            <!-- This code was for entering a custom value for Other, but probably isn't needed -->
                            <!--<Grid>
                                <Grid.Style>
                                    <Style>
                                        <Setter Property="Label.Visibility" Value="Collapsed"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=EthnicityComboBox, Path=SelectedItem.Tag}" Value="OtherEthnicity">
                                                <Setter Property="Label.Visibility" Value="Visible"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Label>Specify Race:</Label>
                                <TextBox x:Name="OtherEthnicityTextBox" Text="{Binding ElementName=EthnicityComboBox, Path=SelectedItem.Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>-->
                        </StackPanel>
                    </GroupBox>
                </Paragraph>
                <Paragraph>
                    <GroupBox Header="Zip Code">
                        <TextBox x:Name="ZipCodeTextBox" Text="{Binding client.ZipCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </GroupBox>
                </Paragraph>
                <Paragraph>
                    <GroupBox Header="Smoking">
                        <Grid>
                            <Label>Does anyone smoke?</Label>
                            <TextBox x:Name="SmokingTextBox"  Height="125" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Visible" Text="{Binding client.Smoker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <!-- Old code for boolean based smoking selection -->
                            <!--<StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <RadioButton x:Name="SmokingYesRadioButton" IsChecked="{Binding Path=client.Smoking, Converter={StaticResource RadioBoolToLongConverter}, ConverterParameter=1}">Yes</RadioButton>
                                <RadioButton x:Name="SmokingNoRadioButton" IsChecked="{Binding Path=client.Smoking, Converter={StaticResource RadioBoolToLongConverter}, ConverterParameter=0}">No</RadioButton>
                            </StackPanel>-->
                        </Grid>
                    </GroupBox>
                </Paragraph>
                <Paragraph>
                    <GroupBox Header="Marital Status">
                        <ComboBox x:Name="MaritalStatusComboBox" SelectedValuePath="Content" SelectedValue="{Binding client.MaritalStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBoxItem>Single</ComboBoxItem>
                            <ComboBoxItem>Married</ComboBoxItem>
                            <ComboBoxItem>Seperated</ComboBoxItem>
                            <ComboBoxItem>Unknown</ComboBoxItem>
                        </ComboBox>
                    </GroupBox>
                </Paragraph>
                <Paragraph>
                    <GroupBox Header="Education">
                        <StackPanel>
                            <Grid>
                                <Label>Current Enrollment:</Label>
                                <ComboBox x:Name="CurrentStudentEnrollmentComboBox" SelectedValuePath="Content" SelectedValue="{Binding client.CurrentStudentEnrollment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem IsSelected="True">Junior High School</ComboBoxItem>
                                    <ComboBoxItem>High School</ComboBoxItem>
                                    <ComboBoxItem>Home School</ComboBoxItem>
                                    <ComboBoxItem>GED</ComboBoxItem>
                                    <ComboBoxItem>College</ComboBoxItem>
                                    <ComboBoxItem>Trade School</ComboBoxItem>
                                    <ComboBoxItem>Not Currently Enrolled</ComboBoxItem>
                                    <ComboBoxItem>Unknown</ComboBoxItem>
                                </ComboBox>
                            </Grid>
                            <Grid>
                                <Label>Educational Background:</Label>
                                <ComboBox x:Name="EducationalBackgroundComboBox" SelectedValuePath="Content" SelectedValue="{Binding client.EducationalBackground, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem>N/A</ComboBoxItem>
                                    <ComboBoxItem>Drop Out</ComboBoxItem>
                                    <ComboBoxItem>High School Grad</ComboBoxItem>
                                    <ComboBoxItem>GED</ComboBoxItem>
                                    <ComboBoxItem>Some College</ComboBoxItem>
                                    <ComboBoxItem>College Grad</ComboBoxItem>
                                    <ComboBoxItem>Technical Training</ComboBoxItem>
                                    <ComboBoxItem>Unknown</ComboBoxItem>
                                </ComboBox>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </Paragraph>
                <Paragraph>
                    <GroupBox Header="Pregnancy Information">
                        <StackPanel>
                            <Grid>
                                <Label>Are you pregnant today?</Label>
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <RadioButton x:Name="IsPregnant">Yes</RadioButton>
                                    <RadioButton IsChecked="True">No</RadioButton>
                                </StackPanel>
                            </Grid>
                            <StackPanel Visibility="{Binding ElementName=IsPregnant, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid>
                                    <Label>Due Date:</Label>
                                    <DatePicker x:Name="DueDateDatePicker" Text="{Binding pregnancy.DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                                <Grid>
                                    <Label>OB Care Before Registration:</Label>
                                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                        <RadioButton x:Name="OBCareBeforeRegYesRadioButton" IsChecked="{Binding Path=pregnancy.OBCareBeforeReg, Converter={StaticResource RadioBoolToLongConverter}, ConverterParameter=1}">Yes</RadioButton>
                                        <RadioButton x:Name="OBCareBeforeRegNoRadioButton" IsChecked="{Binding Path=pregnancy.OBCareBeforeReg, Converter={StaticResource RadioBoolToLongConverter}, ConverterParameter=0}">No</RadioButton>
                                    </StackPanel>
                                </Grid>
                                <Grid>
                                    <Label>Comment:</Label>
                                    <TextBox x:Name="PregnancyCommentTextBox" Text="{Binding pregnancy.Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </Paragraph>
                <Paragraph>
                    <GroupBox Header="Pregnancy History">
                        <Grid>
                            <ComboBox x:Name="PregnancyHistoryComboBox" SelectedValuePath="Content" SelectedValue="{Binding client.PregnancyHistory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem>First Pregnancy</ComboBoxItem>
                                <ComboBoxItem>Baby Already Born</ComboBoxItem>
                                <ComboBoxItem>Pregnant and Has Children</ComboBoxItem>
                                <ComboBoxItem>Not Pregnant and Has Children</ComboBoxItem>
                            </ComboBox>
                        </Grid>
                    </GroupBox>
                </Paragraph>
                <Paragraph>
                    <GroupBox Header="Hope House Information">
                        <StackPanel>
                            <Grid>
                                <Label>Application Date:</Label>
                                <DatePicker x:Name="ApplicationDateDatePicker" Text="{Binding client.ApplicationDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                            <Grid>
                                <Label>Status:</Label>
                                <TextBox x:Name="CurrentStatusTextBox" Text="{Binding client.CurrentStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                            <Grid>
                                <Label>Enrolled in Motherhood Program:</Label>
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <RadioButton x:Name="MotherhoodProgramYesRadioButton" IsChecked="{Binding Path=client.MotherhoodProgram, Converter={StaticResource RadioBoolToLongConverter}, ConverterParameter=1}">Yes</RadioButton>
                                    <RadioButton x:Name="MotherhoodProgramNoRadioButton" IsChecked="{Binding Path=client.MotherhoodProgram, Converter={StaticResource RadioBoolToLongConverter}, ConverterParameter=0}">No</RadioButton>
                                </StackPanel>
                            </Grid>
                            <Grid>
                                <Label>Enrolled in Parenting Program:</Label>
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <RadioButton x:Name="ParentingProgramYesRadioButton" IsChecked="{Binding Path=client.ParentingProgram, Converter={StaticResource RadioBoolToLongConverter}, ConverterParameter=1}">Yes</RadioButton>
                                    <RadioButton x:Name="ParentingProgramNoRadioButton" IsChecked="{Binding Path=client.ParentingProgram, Converter={StaticResource RadioBoolToLongConverter}, ConverterParameter=0}">No</RadioButton>
                                </StackPanel>
                            </Grid>
                            <Grid>
                                <Label>Registering Individual:</Label>
                                <TextBox x:Name="RegisteringIndividualTextBox" Text="{Binding client.RegisteringIndividual, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                            <Grid>
                                <Label>Comments:</Label>
                                <TextBox x:Name="ClientCommentTextBox" Height="125" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Visible" Text="{Binding client.Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </Paragraph>
            </FlowDocument>
        </FlowDocumentPageViewer>
    </DockPanel>
</Page>
